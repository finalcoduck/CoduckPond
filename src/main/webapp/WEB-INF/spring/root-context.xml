<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:property-placeholder location="/*.properties"/>	
	<!-- dataSource설정 -->
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="url" value="${jdbc.url}" />
	</bean>
	<!-- sql log를 위한 설정 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL         :  " />
			</bean>
		</property>
	</bean>
	<!-- 트랜잭션 처리 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- SqlSessionFactory설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:Mappers/**/*Mapper.xml" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
	</bean>
	<!-- SqlSession설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<!-- 메일보내기 -->
   <bean id="mailSender" class = "org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="${sender.username}" />
      <property name="password" value="${sender.password}" />
      
      <property name="javaMailProperties">
         <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
         </props>
      </property>
    </bean>
    <!-- Google 소셜 로그인 뎐결 설정 -->
    <bean id = "googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
	<constructor-arg value="537547564600-gp76g50d9v93h9cv38aqm0idb39chhsf.apps.googleusercontent.com"/>
	<constructor-arg value="85qZ9LCnhqFP7gr1MOA71RdM"/>    
	</bean>
	 
	<bean id = "googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
	<property name="scope" value="https://www.googleapis.com/auth/plus.login"></property>
	<property name="redirectUri" value="http://localhost:8090/pond/member/login/googlecallback"/>
	</bean>
    
    <!-- Transactional 어노테이션을 scan하기 위한 설정 -->
	<tx:annotation-driven/>
	
	<context:component-scan base-package="com.coduck.pond">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>	
	</context:component-scan>
		
</beans>
